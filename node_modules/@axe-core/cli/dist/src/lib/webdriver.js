"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.startDriver = void 0;
const chromedriver = require("chromedriver");
const selenium_webdriver_1 = require("selenium-webdriver");
const chrome = require("selenium-webdriver/chrome");
const startDriver = (config) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    const scriptTimeout = (config.timeout || 20) * 1000.0;
    let builder;
    /* istanbul ignore else */
    if (config.browser === 'chrome-headless') {
        const service = new chrome.ServiceBuilder(config.chromedriverPath || chromedriver.path).build();
        chrome.setDefaultService(service);
        let options = new chrome.Options().headless();
        if ((_a = config.chromeOptions) === null || _a === void 0 ? void 0 : _a.length) {
            options = config.chromeOptions.reduce(function (options, arg) {
                return options.addArguments(arg);
            }, options);
        }
        builder = new selenium_webdriver_1.Builder().forBrowser('chrome').setChromeOptions(options);
    }
    else {
        builder = new selenium_webdriver_1.Builder().forBrowser(config.browser);
    }
    config.builder = builder;
    const driver = builder.build();
    yield driver.manage().setTimeouts({ script: scriptTimeout });
    return driver;
});
exports.startDriver = startDriver;
//# sourceMappingURL=webdriver.js.map